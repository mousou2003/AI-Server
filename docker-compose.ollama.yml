# Ollama Service - Base Configuration (CPU-optimized by default)
# Can be used independently or with other services
# Use docker-compose.gpu-override.yml for GPU acceleration
# Use script-specific overrides for specialized setups

services:
  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    ports:
      - "11434:11434"
    volumes:
      - ./.ollama:/root/.ollama
    restart: unless-stopped
    environment:
      # Optimized for single-user CPU development
      - OLLAMA_NUM_PARALLEL=1          # Focus all resources on one request
      - OLLAMA_MAX_LOADED_MODELS=2     # Keep 2 models in memory
      - OLLAMA_NUM_THREAD=12           # Use all available CPU threads
      # Extended timeouts for better user experience
      - OLLAMA_REQUEST_TIMEOUT=180     # 3 minutes for complex requests
      - OLLAMA_KEEP_ALIVE=10m          # Keep models loaded for 10 minutes
      - OLLAMA_MAX_REQUEST_SIZE=20m    # Larger request size limit
      - OLLAMA_LOAD_TIMEOUT=8m         # More time for model loading
    # Laptop-friendly memory limits (optimized for 16GB available memory)
    deploy:
      resources:
        limits:
          memory: 12g  # Conservative limit for 7B model on memory-constrained laptop
        reservations:
          memory: 8g   # Minimum needed for 7B model
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:11434/api/tags || curl -f http://localhost:11434/api/tags || exit 1"]
      interval: 60s   # Check every minute instead of 30s
      timeout: 15s    # Give more time for the health check
      retries: 5      # More retries for reliability
      start_period: 120s  # Give even more time for initial startup
    networks:
      - ai_network

volumes:
  ollama-data:

networks:
  ai_network:
    driver: bridge
    external: true
